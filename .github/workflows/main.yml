name: Extract and Release

on:
  workflow_dispatch:
    inputs:
      ROM_URL:
        description: "ROM URL"
        default: "https://builds.paranoidandroid.co/aospa-uvite-beta-phone2-20240623-image.zip"
      DEVICE_NAME:
        description: "Device Name"
        default: "phone2"

jobs:
  extract-rom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install necessary packages (7-Zip, simg2img)
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full simg2img

      - name: Download ROM file
        run: |
          curl -L -w "%{http_code}" ${{ github.event.inputs.ROM_URL }} --output rom.zip
          if [ $? -ne 0 ]; then
            echo "::error:: Failed to download ROM file!"
            exit 1
          fi

          FILE_TYPE=$(file rom.zip)
          if [[ "$FILE_TYPE" != *"Zip archive"* ]]; then
            echo "::error:: The downloaded file is not a valid ZIP archive!"
            exit 1
          fi
          
          FILE_SIZE=$(stat -c%s "rom.zip")
          if [[ "$FILE_SIZE" -lt 10240 ]]; then
            echo "::error:: Downloaded ROM file is too small. Possible download error!"
            exit 1
          fi

      - name: Extract ROM using 7-Zip
        run: |
          7z x rom.zip -orom_extracted
          if [ $? -ne 0 ]; then
            echo "::error:: Failed to extract ROM zip!"
            exit 1
          fi

      - name: Check and convert vendor.img if necessary
        run: |
          cd rom_extracted
          if [ -f vendor.img ]; then
            VENDOR_TYPE=$(file vendor.img)
            if [[ "$VENDOR_TYPE" == *"Android sparse image"* ]]; then
              simg2img vendor.img vendor_raw.img
              mv vendor_raw.img vendor.img
            fi
          else
            echo "::error:: vendor.img not found!"
            exit 1
          fi

      - name: Upload vendor.img to Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: rom_extracted/vendor.img
          name: ${{ github.event.inputs.DEVICE_NAME }}-vendor-${{ github.run_id }}
          tag_name: ${{ github.run_id }}