name: Extract build.prop from ROM

on:
  workflow_dispatch:
    inputs:
      rom_url:
        description: 'Link to the rom.zip file'
        required: true
        type: string
      device_name:
        description: 'Name of the device'
        required: true
        type: string

jobs:
  extract_build_prop:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Install required packages
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y unace unrar zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract file-roller
          sudo apt-get install -y e2fsprogs # cài đặt e2fsprogs để sử dụng debugfs
          
      # 3. Download the rom.zip file and extract
      - name: Download ROM
        run: |
          curl -L ${{ github.event.inputs.rom_url }} -o rom.zip
          unzip rom.zip -d extracted_rom

      # 4. Extract build.prop from vendor.img using debugfs
      - name: Extract build.prop from vendor.img
        run: |
          # Chuyển đổi vendor.img từ sparse sang raw nếu cần thiết
          if file extracted_rom/vendor.img | grep -q "sparse"; then
            wget https://github.com/AndroidDumps/Firmware_extractor/raw/f821b84cede47b3f6add20a9a111b44f79da89b8/tools/Linux/bin/simg2img
            chmod +x simg2img
            ./simg2img extracted_rom/vendor.img extracted_rom/vendor.raw.img
            vendor_image="extracted_rom/vendor.raw.img"
          else
            vendor_image="extracted_rom/vendor.img"
          fi
          
          # Trích xuất build.prop từ vendor_image
          mkdir -p extracted_rom/vendor_mount
          sudo mount -o loop $vendor_image extracted_rom/vendor_mount
          cp extracted_rom/vendor_mount/build.prop ./${{ github.event.inputs.device_name }}_build.prop || echo "build.prop not found"
          sudo umount extracted_rom/vendor_mount

      # 5. Clean up to save space (remove rom.zip and unnecessary files)
      - name: Clean up unnecessary files
        run: |
          rm -rf rom.zip extracted_rom

      # 6. Upload build.prop to GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: "Build.prop for ${{ github.event.inputs.device_name }}"
          body: "This release contains the build.prop for ${{ github.event.inputs.device_name }}. ROM link: ${{ github.event.inputs.rom_url }}"
          draft: false
          prerelease: false

      - name: Upload build.prop to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.inputs.device_name }}_build.prop
          asset_name: "${{ github.event.inputs.device_name }}_build.prop"
          asset_content_type: text/plain